{"version":3,"file":"api.js","mappings":"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","sources":["webpack://view-json/./src/render.js","webpack://view-json/./src/transform.js","webpack://view-json/./src/utils/appearence.js","webpack://view-json/./src/utils/converting.js","webpack://view-json/./src/utils/formatKeys.js","webpack://view-json/./src/utils/isObject.js","webpack://view-json/webpack/bootstrap","webpack://view-json/webpack/runtime/define property getters","webpack://view-json/webpack/runtime/hasOwnProperty shorthand","webpack://view-json/webpack/runtime/make namespace object","webpack://view-json/./src/api.js"],"sourcesContent":["import { isObject } from './utils/isObject.js';\n\nconst createSimpleDOMElement = (tag, value = '', classNameOrOptions) => {\n  const element = document.createElement(tag);\n  element.innerHTML = value;\n\n  if (isObject(classNameOrOptions)) {\n    for (let param in classNameOrOptions) {\n      element[param] = classNameOrOptions[param];\n    }\n  } else {\n    const classNames = Array.isArray(classNameOrOptions)\n      ? classNameOrOptions.join(' ')\n      : classNameOrOptions;\n\n    element.className = classNames;\n  }\n\n  return element;\n};\n\nconst renderSimpleValue = (key, value) => {\n  const fragment = document.createDocumentFragment();\n\n  fragment.appendChild(createSimpleDOMElement('span', key, 'key'));\n  fragment.appendChild(createSimpleDOMElement('span', ': ', 'value'));\n  fragment.appendChild(createSimpleDOMElement('span', value, 'value'));\n\n  return fragment;\n};\n\nexport const render = (convertedData, rootElement) => {\n  const mainElement = createSimpleDOMElement('div', null, {\n    className: 'main',\n  });\n\n  for (const key in convertedData) {\n    const value = convertedData[key];\n    const objectElement = createSimpleDOMElement('div', null, [\n      'field',\n      typeof value,\n    ]);\n\n    objectElement.appendChild(renderSimpleValue(key, value));\n    mainElement.appendChild(objectElement);\n  }\n\n  rootElement.appendChild(mainElement);\n};\n","import { isFieldShouldBeVisible } from './utils/converting.js';\nimport { valueAppearence } from './utils/appearence.js';\nimport { convertKey } from './utils/formatKeys.js';\n\nexport const transform = (data, settings) => {\n  if (!settings || !Object.keys(settings).length) return data;\n\n  const transformed = Array.isArray(data) ? [] : {};\n\n  const { isFormatKeys } = settings;\n\n  for (const key in data) {\n    const newKey = isFormatKeys ? convertKey(key) : key;\n\n    if (isFieldShouldBeVisible(key, data[key], settings)) {\n      if (data[key] && typeof data[key] === 'object') {\n        transformed[newKey] = transform(data[key], settings);\n      } else {\n        transformed[newKey] = valueAppearence(data[key], settings);\n      }\n    }\n  }\n\n  return transformed;\n};\n","export const valueAppearence = (value, { nullAppearence, boolAppearence }) => {\n  if (boolAppearence && typeof value === 'boolean') {\n    return boolAppearence[+value];\n  }\n\n  if (nullAppearence && value === null) {\n    return nullAppearence;\n  }\n\n  return value;\n};\n","import { isObject } from './isObject.js';\n\nexport const isFieldShouldBeVisible = (key, value, settings) => {\n  const { hidePropertiesByValue, hidePropertiesByKey } = settings;\n\n  if (!hidePropertiesByKey && !hidePropertiesByValue) return true;\n\n  if (\n    !isObject(value) &&\n    hidePropertiesByValue &&\n    hidePropertiesByValue.includes(value)\n  ) {\n    return false;\n  }\n\n  if (hidePropertiesByKey && hidePropertiesByKey.includes(key)) {\n    return false;\n  }\n\n  return true;\n};\n","const removeAbbrFromBegin = word => {\n  const count = (word.match(/[A-Z]/g) || []).length;\n  const isAbbr = /^[A-Z]+$/.test(word);\n\n  if (count > 1 && !isAbbr) {\n    return word.slice(0, count - 1) + ' ' + word.slice(count - 1);\n  }\n\n  return word;\n};\n\nconst convertKey = key => {\n  if (typeof key !== 'string') return null;\n\n  const words = key.split(/[\\s_\\-]/);\n  const nonEmptyWords = words.filter(word => word);\n  const wordPattern = /([A-Z]+$)|(\\d+[a-z]+)|(\\d+)|(((^[a-z])|[A-Z]+)[a-z]*)/g;\n  let parts = [];\n\n  for (let word of nonEmptyWords) {\n    const newParts = word.match(wordPattern) || [word];\n    parts = parts.concat(newParts);\n  }\n\n  return parts ? parts.map(word => removeAbbrFromBegin(word)).join(' ') : key;\n};\n\n// const convertByMask = (value, mask) => {\n//   const partPattern = /\\{(\\w|\\.)+?\\}/g;\n//   const key = mask.replace(partPattern, function (part) {\n//     const path = part.slice(1, -1).split('.');\n\n//     let convertedKey = value[path[0]];\n\n//     for (let i = 1; i < path.length; i++) {\n//       if (convertedKey && convertedKey[path[i]]) {\n//         convertedKey = convertedKey[path[i]];\n//       } else {\n//         convertedKey = '-';\n//         break;\n//       }\n//     }\n\n//     return convertedKey || '-';\n//   });\n\n//   return key;\n// };\n\nexport {\n  convertKey,\n  // convertByMask\n};\n","export const isObject = data =>\n  typeof data === 'object' && !Array.isArray(data) && data !== null;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { transform } from './transform.js';\nimport { render } from './render.js';\n\nexport const convert = (data, settings = {}) => {\n  try {\n    const parsed = JSON.parse(data);\n    const converted = transform(parsed, settings);\n\n    return converted;\n  } catch (error) {\n    // console.error && console.error(error.message);\n    return 'Invalid JSON';\n  }\n};\n\nexport const generate = (data, settings, nodeElement) => {\n  render(convert(data, settings), nodeElement);\n};\n"],"names":["isObject","createSimpleDOMElement","tag","value","classNameOrOptions","element","document","createElement","innerHTML","param","classNames","Array","isArray","join","className","renderSimpleValue","key","fragment","createDocumentFragment","appendChild","render","convertedData","rootElement","mainElement","objectElement","isFieldShouldBeVisible","valueAppearence","convertKey","transform","data","settings","Object","keys","length","transformed","isFormatKeys","newKey","nullAppearence","boolAppearence","hidePropertiesByValue","hidePropertiesByKey","includes","removeAbbrFromBegin","word","count","match","isAbbr","test","slice","words","split","nonEmptyWords","filter","wordPattern","parts","newParts","concat","map","convert","parsed","JSON","parse","converted","error","generate","nodeElement"],"sourceRoot":""}